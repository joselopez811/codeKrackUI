{"version":3,"sources":["components/Code.js","components/Question.js","components/Button.js","components/IsCorrect.js","components/Incorrect.js","components/Header.js","components/Score.js","components/Loading.js","components/Quiz.js","Home.js","AddNewCode.js","App.js","serviceWorker.js","index.js"],"names":["Code","props","code","className","Question","question","Button","onClick","this","button","React","Component","IsCorrect","action","Incorrect","href","Header","to","score","message","Loading","Quiz","state","loading","quiz","correct","incorrect","quizDone","counter","seconds","closeModal","bind","_correct","_incorrect","tick","restart","home","setState","timer","setInterval","clearInterval","language","location","url","fetch","response","json","data","window","reload","Score","answers","answer","id","answerId","Home","pathname","AddNewCode","form","answer1","answer2","answer3","answer4","answer5","handleChange","handleSubmit","evt","persist","store","target","name","value","event","preventDefault","method","headers","body","JSON","stringify","then","res","catch","err","console","log","onSubmit","onChange","type","cols","rows","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d0424c4.chunk.js","sourcesContent":["import React  from 'react';\r\n\r\n    function Code (props) {\r\n        const code = props.code;\r\n            return (\r\n                <div className='code'>\r\n                  <figure>                \r\n                    <pre className='prettyprint linenums'>\r\n                        <code>\r\n                        {code}\r\n                        </code>\r\n                    </pre>\r\n                  </figure>                   \r\n                </div>\r\n            );\r\n    }\r\n    export default Code;\r\n    ","import React from 'react';\r\n\r\nfunction Question (props) {\r\n    const question = props.question;\r\n        return (\r\n            <div className='question'> \r\n                <p>\r\n                    {question}  \r\n                </p>                                                             \r\n            </div>\r\n        );   \r\n}\r\nexport default Question;","import React from 'react';\r\n\r\nclass Button extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className='button' > \r\n                <button onClick={this.props.onClick}>\r\n                    {this.props.button}\r\n                    \r\n                </button>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nclass IsCorrect extends React.Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className='popup-content'>\r\n            <h2>Correct</h2>\r\n            <button onClick={this.props.action}>Next Question</button>\r\n          </div>         \r\n        </div>\r\n      );        \r\n    }\r\n  }\r\n\r\nexport default IsCorrect;","import React from 'react';\r\n\r\nclass Incorrect extends React.Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className='popup-content incorrect'>\r\n            <h1>Incorrect</h1>\r\n            <h2>Learn Java at GCU!</h2>\r\n            <p><a href=\"https://www.gcu.edu/degree-programs/java-programming-certificate\">Sign Up</a></p>\r\n            <button onClick={this.props.action}>Next Question</button>\r\n          </div>         \r\n        </div>\r\n      );\r\n        \r\n    }\r\n  }\r\n\r\nexport default Incorrect;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header (props) {\r\n        return (\r\n            <div className='header'> \r\n               <header className=\"App-header\">\r\n                    <h2 className=\"App-title\">Code Skills Test</h2>\r\n                    <Link to=\"/home\" >\r\n                            <span>HOME</span>\r\n                        </Link>\r\n                </header>                                         \r\n            </div>\r\n        );   \r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass IsCorrect extends React.Component {\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className='popup-content score'>\r\n            <h2>Final Score: {this.props.score}/5</h2>\r\n            <p>{this.props.message}</p>\r\n            <Link to=\"/home\" >\r\n                <button onClick={this.props.action}>\r\n                    Home\r\n                </button>\r\n            </Link>\r\n          </div>        \r\n        </div>\r\n      );\r\n        \r\n    }\r\n  }\r\n\r\nexport default IsCorrect;","import React from 'react';\r\nimport Button from './Button';\r\nimport Question from './Question';\r\nimport Code from './Code';\r\n\r\nclass Loading extends React.Component {\r\n  \r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"counter\"><span>90</span></div>\r\n                <div className=\"toprow\">\r\n                    <div className=\"Column questionasnwer\">\r\n                        <h3>Question</h3>\r\n                        <div><Question question={\"Loading\"}/></div>\r\n                        <div className=\"answers\"> \r\n                            <Button button={\"Loading\"} /> \r\n                            <Button button={\"Loading\"} /> \r\n                            <Button button={\"Loading\"} /> \r\n                            <Button button={\"Loading\"} /> \r\n                            <Button button={\"Loading\"} />        \r\n                        </div>\r\n                    </div>                        \r\n                    <div className=\"Column\">\r\n                        <h3>Code</h3>\r\n                        <Code code={'Loading...'}/>\r\n                    </div> \r\n                </div>                   \r\n            </div>         \r\n        </div>\r\n      );\r\n        \r\n    }\r\n  }\r\n\r\nexport default Loading;","import React from 'react';\r\nimport Code from './Code';\r\nimport Question from './Question';\r\nimport Button from './Button';\r\nimport '../App.css';\r\nimport IsCorrect from './IsCorrect';\r\nimport Incorrect from './Incorrect';\r\nimport Header from './Header';\r\nimport Score from './Score';\r\nimport Loading from './Loading';\r\n\r\n    class Quiz extends React.Component {\r\n        constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            quiz: null,\r\n            correct: false,\r\n            incorrect: false,\r\n            quizDone: false,\r\n            score: 0,\r\n            counter: 0,            \r\n            seconds: 60\r\n        };\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this._correct = this._correct.bind(this);\r\n        this._incorrect = this._incorrect.bind(this);\r\n        this.tick = this.tick.bind(this);\r\n        this.restart = this.home.bind(this);\r\n    }\r\n    closeModal() {\r\n        this.setState({ \r\n            correct: false,\r\n            incorrect: false,\r\n            seconds: 60,\r\n            counter: this.state.counter + 1 \r\n            });\r\n            if(this.state.counter >= 4) {\r\n                this.setState({\r\n                    quizDone: true\r\n                });\r\n            }\r\n        this.timer = setInterval(this.tick, 1000);        \r\n    }\r\n    _correct() {\r\n        clearInterval(this.timer);\r\n        this.setState({\r\n            correct: true,\r\n            score: (this.state.score + 1)\r\n        });\r\n    }\r\n    _incorrect() {        \r\n        clearInterval(this.timer);\r\n        this.setState({\r\n            incorrect: true,\r\n        });\r\n    }\r\n    \r\n    tick(){\r\n        if (this.state.seconds > 0) {\r\n            this.setState({seconds: this.state.seconds - 1})\r\n        } else {\r\n            clearInterval(this.timer);\r\n            this._incorrect();\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {language} = this.props.location.state;\r\n        const url = \"/get/language?language=\" + language;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        this.setState({quiz: data, loading: false});\r\n        this.timer = setInterval(this.tick, 1000);\r\n    }\r\n\r\n    home() {\r\n        window.location.reload();\r\n    }\r\n\r\n    render() { \r\n\r\n    return (\r\n        \r\n        <div className='body'>\r\n            <Header/>\r\n            \r\n           { this.state.loading || !this.state.quiz[this.state.counter] ? (\r\n\r\n                <div>\r\n                    {this.state.quizDone ? (\r\n                    <div className=\"popup\">\r\n                        <Score  score={this.state.score}/>\r\n                    </div>\r\n                    ) : null}\r\n                    \r\n                    <Loading/>\r\n                </div>\r\n               \r\n               \r\n                ) : ( \r\n                <div className=\"container\">\r\n                    \r\n                    {this.state.quizDone ? (<div className=\"popup\"><Score score={this.state.score}/></div>) : null}\r\n                        {this.state.correct ? (<div className='popup'><IsCorrect action={this.closeModal.bind(this)}/></div>) : null}\r\n                        {this.state.incorrect ? (<div className='popup'><Incorrect action={this.closeModal.bind(this)}/></div>) : null}\r\n                        \r\n                        <div className=\"toprow\">\r\n                        \r\n                            <div className=\"timer-div\"><h4 className=\"timerr\">{this.state.seconds}</h4></div>\r\n                            <div className=\"Column questionasnwer\">\r\n                            <h3>Question{\"\\t\\t\\t\\t\" + (this.state.counter + 1) + \"/5\"}</h3>\r\n                            <div><Question question={this.state.quiz[this.state.counter].question} /></div>\r\n                            <div className=\"answers\"> \r\n                                <Button \r\n                                    button={this.state.quiz[this.state.counter].answers[0].answer} \r\n                                    onClick={this.state.quiz[this.state.counter].answers[0].id \r\n                                        === this.state.quiz[this.state.counter].answers[0].answerId \r\n                                    ? (this._correct).bind(this) : (this._incorrect).bind(this)   }/>   \r\n\r\n                                <Button button={this.state.quiz[this.state.counter].answers[1].answer}\r\n                                        onClick={  this.state.quiz[this.state.counter].answers[1].id \r\n                                            === this.state.quiz[this.state.counter].answers[1].answerId \r\n                                            ? (this._correct).bind(this) : (this._incorrect).bind(this)   }/>\r\n\r\n                                <Button button={this.state.quiz[this.state.counter].answers[2].answer}\r\n                                        onClick={  this.state.quiz[this.state.counter].answers[2].id\r\n                                            === this.state.quiz[this.state.counter].answers[2].answerId \r\n                                            ? (this._correct).bind(this) : (this._incorrect).bind(this)   }/>\r\n\r\n                                <Button button={this.state.quiz[this.state.counter].answers[3].answer}\r\n                                        onClick={  this.state.quiz[this.state.counter].answers[3].id \r\n                                            === this.state.quiz[this.state.counter].answers[3].answerId \r\n                                            ? (this._correct).bind(this) : (this._incorrect).bind(this)   }/>\r\n\r\n                                <Button button={this.state.quiz[this.state.counter].answers[4].answer}\r\n                                        onClick={  this.state.quiz[this.state.counter].answers[4].id \r\n                                            === this.state.quiz[this.state.counter].answers[4].answerId \r\n                                            ? (this._correct).bind(this) : (this._incorrect).bind(this)   }/>\r\n                            </div>\r\n                            <div className='score-keep'>\r\n                            <h4>Score: {this.state.score} </h4>\r\n                            </div>\r\n                        </div>\r\n                                                \r\n                            <div className=\"Column\">\r\n                                <h3>Code</h3>\r\n                                <Code className='prettyprint linenums' code={this.state.quiz[this.state.counter].code.code}/>\r\n                            </div> \r\n                        </div>                   \r\n                    </div>\r\n                )\r\n                \r\n        }\r\n        </div>   \r\n                \r\n    );\r\n    }\r\n}   \r\n        \r\n    export default Quiz;","import React from 'react';\r\nimport Question from './components/Question';\r\nimport Code from './components/Code';\r\nimport Header from './components/Header';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className='body'>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"toprow\">\r\n                    <div className=\"Column questionasnwer\">\r\n                        <h3 className='get-krackin'>Get Krackin</h3>\r\n                        <div><Question question={\"in\"}/></div>\r\n                        <div className=\"answers\"> \r\n                        <Link to={{ pathname:\"/quiz\", state: {language: 'java'} }}>\r\n                            <div className=\"button\">\r\n                            <button onClick={this.props.action}>\r\n                                Java\r\n                            </button>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={{ pathname:\"/quiz\", state: {language: 'c'} }}>\r\n                            <div className=\"button\">\r\n                            <button onClick={this.props.action}>\r\n                                C#\r\n                            </button>\r\n                            </div>\r\n                        </Link>\r\n                        <Link  to={{ pathname:\"/quiz\", state: {language: 'kotlin'} }}>\r\n                            <div className=\"button\">\r\n                            <button onClick={this.props.action}>\r\n                                Kotlin\r\n                            </button>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={{ pathname:\"/quiz\", state: {language: 'javascript'} }}>\r\n                            <div className=\"button\">\r\n                            <button onClick={this.props.action}>\r\n                                JavaScript\r\n                            </button>\r\n                            </div>\r\n                        </Link>  \r\n                        </div>\r\n                    </div>                        \r\n                    <div className=\"Column\">\r\n                        <h3>Code</h3>\r\n                        <Code code={'So you think you can code...\\n\\nTake the CodeKrack challenge to find out\\n\\n<<=Choose Your Language'}/>\r\n                    </div>\r\n                     \r\n                </div>\r\n                                   \r\n            </div>     \r\n        </div>\r\n      );\r\n        \r\n    }\r\n  }\r\n\r\nexport default Home;","import React from 'react';\r\nimport Header from './components/Header';\r\n\r\nclass AddNewCode extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          form: {  \r\n                language: 'java',                 \r\n                question: '',\r\n                code: '',\r\n                answer: 1,  \r\n                answer1: '',\r\n                answer2: '',\r\n                answer3: '',\r\n                answer4: '',\r\n                answer5: '',\r\n            }  \r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n      handleChange(evt) {\r\n\r\n        evt.persist();\r\n        let store = this.state;\r\n        store.form[evt.target.name] = evt.target.value;\r\n        this.setState(store);\r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        event.preventDefault();\r\n        debugger;\r\n        fetch('/addQuestion', { \r\n            method: 'POST', \r\n            headers: { 'Content-Type': 'application/json' }, \r\n            body: JSON.stringify(this.state.form) \r\n          })\r\n          .then(res => res.json()\r\n          )\r\n          .catch(err => console.log(err));\r\n          // this.state.form\r\n          console.log(JSON.stringify(this.state.form));\r\n      }\r\n      \r\n\r\n    render() {\r\n      return (\r\n        <div className='body'>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"toprow\">\r\n                    <div className=\"Column questionasnwer\">\r\n                        <h3 className='get-krackin'>Get Krackin</h3>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <label>Answer</label>\r\n                            <select id='language' name='language' onChange={evt => this.handleChange(evt)}>\r\n                              <option value={\"java\"} name='java' id='java'>Java</option>\r\n                                <option value={\"c\"} name='c' id='c'>C#</option>\r\n                                <option value={\"kotlin\"} name='kotlin' id='kotlin'>Kotlin</option>\r\n                                <option value={\"javascript\"} name='javascript' id='javascript'>JavaScript</option>\r\n                            </select>\r\n                            <label>\r\n                            Question:\r\n                            <input type=\"text\" name='question' id='question' value={this.state.question} onChange={evt => this.handleChange(evt)} />\r\n                            </label>\r\n\r\n                            <div className=\"answers\">\r\n                           \r\n                            <label>\r\n                            Option 1:\r\n                            <input type=\"text\" name='answer1' id='answer1' value={this.state.answer1} onChange={evt => this.handleChange(evt)} />\r\n                            </label>\r\n                            <label>\r\n                            Option 2:\r\n                            <input type=\"text\" name='answer2' id='answer2' value={this.state.answer2} onChange={evt => this.handleChange(evt)} />\r\n                            </label>\r\n                            <label>\r\n                            Option 3:\r\n                            <input type=\"text\" name='answer3' id='answer3' value={this.state.answer3} onChange={evt => this.handleChange(evt)} />\r\n                            </label>\r\n                            <label>\r\n                            Option 4:\r\n                            <input type=\"text\" name='answer4' id='answer4' value={this.state.answer4} onChange={evt => this.handleChange(evt)} />\r\n                            </label>\r\n                            <label>\r\n                            Option 5:\r\n                            <input type=\"text\" name='answer5' id='answer5' value={this.state.answer5} onChange={evt => this.handleChange(evt)} />\r\n                            </label>\r\n                            </div>\r\n                            <label>Answer</label>\r\n                            <select id='answer' name='answer' onChange={evt => this.handleChange(evt)}> \r\n                                <option value={1} id='answer' name='answer'>Option 1</option>\r\n                                <option value={2} id='answer' name='answer'>Option 2</option>\r\n                                <option value={3} id='answer' name='answer'>Option 3</option>\r\n                                <option value={4} id='answer' name='answer'>Option 4</option>\r\n                                <option value={5} id='answer' name='answer'>Option 5</option>\r\n                            </select>\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                        </form>\r\n                       </div> \r\n                       <div className='Column'>\r\n                         \r\n                            <label>\r\n                            <h3>Code Snippet</h3>\r\n                            \r\n                            <textarea className='code' type=\"text\" name='code' id='code' cols=\"80\" rows=\"16\" value={this.state.code} onChange={evt => this.handleChange(evt)}>\r\n                             \r\n                            </textarea>\r\n                            </label>\r\n                            </div>       \r\n                </div>\r\n                                   \r\n            </div> \r\n\r\n        </div>\r\n      );\r\n        \r\n    }\r\n  }\r\n\r\nexport default AddNewCode;","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport Quiz from './components/Quiz';\nimport Home from './Home';\nimport AddNewCode from './AddNewCode';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n  return (\n    <div className=\"App\">\n        <Router>\n            <Route path='/add' exact={true} component={AddNewCode}/>\n            <Route path='/home' exact={true} component={Home}/>\n            <Route path='/quiz' exact={true} component={Quiz}/>\n            <Route path='/' exact={true} component={Home}/>\n        </Router>\n    </div>\n  );\n  } \n}\n  \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}